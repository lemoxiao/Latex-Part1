import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

blue = (0, 0, 1.0)
green = (0, 0.8, 0)
red = (1.0, 0, 0)
red_alpha = (1.0, 0, 0, 0.7)
gray = (0.7, 0.7, 0.7)

results=[[],
["RandomForestRegressor-M=1",7.134504,2.629471,4.505033,0.063198,0.009473,0.283799,4.221234],
["RandomForestRegressor-M=2",5.023887,2.629471,2.394416,0.063198,0.009473,0.283799,2.110617],
["RandomForestRegressor-M=3",4.320348,2.629471,1.690877,0.063198,0.009473,0.283799,1.407078],
["RandomForestRegressor-M=4",3.968578,2.629471,1.339107,0.063198,0.009473,0.283799,1.055309],
["RandomForestRegressor-M=5",3.757516,2.629471,1.128046,0.063198,0.009473,0.283799,0.844247],
["RandomForestRegressor-M=6",3.616809,2.629471,0.987338,0.063198,0.009473,0.283799,0.703539],
["RandomForestRegressor-M=7",3.516303,2.629471,0.886832,0.063198,0.009473,0.283799,0.603033],
["RandomForestRegressor-M=8",3.440924,2.629471,0.811453,0.063198,0.009473,0.283799,0.527654],
["RandomForestRegressor-M=9",3.382296,2.629471,0.752825,0.063198,0.009473,0.283799,0.469026],
["RandomForestRegressor-M=10",3.335393,2.629471,0.705922,0.063198,0.009473,0.283799,0.422123],
["RandomForestRegressor-M=11",3.297018,2.629471,0.667547,0.063198,0.009473,0.283799,0.383749],
["RandomForestRegressor-M=12",3.265039,2.629471,0.635568,0.063198,0.009473,0.283799,0.351770],
["RandomForestRegressor-M=13",3.237980,2.629471,0.608509,0.063198,0.009473,0.283799,0.324710],
["RandomForestRegressor-M=14",3.214786,2.629471,0.585316,0.063198,0.009473,0.283799,0.301517],
["RandomForestRegressor-M=15",3.194685,2.629471,0.565215,0.063198,0.009473,0.283799,0.281416],
["RandomForestRegressor-M=16",3.177097,2.629471,0.547626,0.063198,0.009473,0.283799,0.263827],
["RandomForestRegressor-M=17",3.161577,2.629471,0.532107,0.063198,0.009473,0.283799,0.248308],
["RandomForestRegressor-M=18",3.147783,2.629471,0.518312,0.063198,0.009473,0.283799,0.234513],
["RandomForestRegressor-M=19",3.135440,2.629471,0.505969,0.063198,0.009473,0.283799,0.222170],
["RandomForestRegressor-M=20",3.124331,2.629471,0.494861,0.063198,0.009473,0.283799,0.211062],
["ExtraTreesRegressor-M=1",6.931454,2.484647,4.446807,0.051816,0.009069,0.230366,4.216441],
["ExtraTreesRegressor-M=2",4.823234,2.484647,2.338587,0.051816,0.009069,0.230366,2.108220],
["ExtraTreesRegressor-M=3",4.120494,2.484647,1.635847,0.051816,0.009069,0.230366,1.405480],
["ExtraTreesRegressor-M=4",3.769124,2.484647,1.284476,0.051816,0.009069,0.230366,1.054110],
["ExtraTreesRegressor-M=5",3.558302,2.484647,1.073654,0.051816,0.009069,0.230366,0.843288],
["ExtraTreesRegressor-M=6",3.417754,2.484647,0.933106,0.051816,0.009069,0.230366,0.702740],
["ExtraTreesRegressor-M=7",3.317362,2.484647,0.832715,0.051816,0.009069,0.230366,0.602349],
["ExtraTreesRegressor-M=8",3.242068,2.484647,0.757421,0.051816,0.009069,0.230366,0.527055],
["ExtraTreesRegressor-M=9",3.183507,2.484647,0.698860,0.051816,0.009069,0.230366,0.468493],
["ExtraTreesRegressor-M=10",3.136657,2.484647,0.652010,0.051816,0.009069,0.230366,0.421644],
["ExtraTreesRegressor-M=11",3.098326,2.484647,0.613679,0.051816,0.009069,0.230366,0.383313],
["ExtraTreesRegressor-M=12",3.066383,2.484647,0.581736,0.051816,0.009069,0.230366,0.351370],
["ExtraTreesRegressor-M=13",3.039355,2.484647,0.554708,0.051816,0.009069,0.230366,0.324342],
["ExtraTreesRegressor-M=14",3.016188,2.484647,0.531541,0.051816,0.009069,0.230366,0.301174],
["ExtraTreesRegressor-M=15",2.996109,2.484647,0.511462,0.051816,0.009069,0.230366,0.281096],
["ExtraTreesRegressor-M=16",2.978541,2.484647,0.493894,0.051816,0.009069,0.230366,0.263528],
["ExtraTreesRegressor-M=17",2.963039,2.484647,0.478392,0.051816,0.009069,0.230366,0.248026],
["ExtraTreesRegressor-M=18",2.949260,2.484647,0.464613,0.051816,0.009069,0.230366,0.234247],
["ExtraTreesRegressor-M=19",2.936931,2.484647,0.452284,0.051816,0.009069,0.230366,0.221918],
["ExtraTreesRegressor-M=20",2.925835,2.484647,0.441188,0.051816,0.009069,0.230366,0.210822]]

n_estimators = range(1, 20+1)

ax = plt.subplot()

plt.plot(n_estimators, [results[m][3] for m in n_estimators], 'o-', color=red, label=r'$var(x)$')
plt.plot(n_estimators, [results[m][6] for m in n_estimators], ':', color=red_alpha, label=r'$\rho(x) \sigma^2_{{\cal L},\theta}$')
plt.plot(n_estimators, [results[m][7] for m in n_estimators], '--', color=red_alpha, label=r'$\frac{1-\rho(x)}{M} \sigma^2_{{\cal L},\theta}$')

plt.xlabel("$M$")

ax.set_xlim([1, 20])
plt.legend()

#plt.plot(n_estimators, [results[20+m][3] for m in n_estimators], 'o-', color=red, label='Extremely Randomized Trees')

plt.show()
